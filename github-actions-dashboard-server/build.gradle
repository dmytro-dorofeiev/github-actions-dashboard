buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath("com.apollographql.apollo:apollo-gradle-plugin:1.3.0")
  }
}

plugins {
	id 'org.springframework.boot' version '2.3.0.M4'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

sourceCompatibility = '1.8'
apply plugin: 'com.apollographql.apollo'

apollo {
	onCompilationUnits {
		graphqlSourceDirectorySet.srcDirs += "src/main/graphql/io/spring/githubactionsdashboard/github"
		schemaFile = new File("src/main/graphql/io/spring/githubactionsdashboard/github/schema.json")
		rootPackageName = "io.spring.githubactionsdashboard.github"
	}
}

build.dependsOn 'generateApolloSources'

repositories {
	mavenCentral()
	jcenter()
	maven { url 'https://repo.spring.io/milestone' }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
	implementation(project(':github-actions-dashboard-ui'))
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.security:spring-security-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'com.apollographql.apollo:apollo-runtime:1.3.0'
	implementation 'org.jetbrains:annotations:13.0'
	implementation 'com.h2database:h2'
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

test {
	useJUnitPlatform()
}
